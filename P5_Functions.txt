A] Write a PL/SQL block to create a function to find maximum of two numbers.

CREATE OR REPLACE FUNCTION find_maximum(num1 NUMBER, num2 NUMBER)
RETURN NUMBER
IS
   max_num NUMBER;
BEGIN
   IF num1 > num2 THEN
      max_num := num1;
   ELSE
      max_num := num2;
   END IF;
   
   RETURN max_num;
END;
/
DECLARE
    max_value NUMBER;
BEGIN
    max_value := find_maximum(10, 10);
    DBMS_OUTPUT.PUT_LINE('MAX VALUE: ' || max_value);
END;
/
B] Write a PL/SQL block to create a function to find square of a number.

CREATE OR REPLACE FUNCTION calculate_square(
    num IN NUMBER
)
RETURN NUMBER
IS
    result NUMBER;
BEGIN
    result := num * num;
    RETURN result;
END calculate_square;

C] Write a PL/SQL block to create a function to find the total strength of Students using functions present in different departments.
CREATE OR REPLACE FUNCTION GetDepartmentAStrength RETURN NUMBER IS
    departmentA_strength NUMBER := 100; -- Assuming 100 students in Department A
BEGIN
    RETURN departmentA_strength;
END GetDepartmentAStrength;
/

CREATE OR REPLACE FUNCTION GetDepartmentBStrength RETURN NUMBER IS
    departmentB_strength NUMBER := 150; -- Assuming 150 students in Department B
BEGIN
    RETURN departmentB_strength;
END GetDepartmentBStrength;
/

CREATE OR REPLACE FUNCTION TotalStudentStrength RETURN NUMBER IS
    total_strength NUMBER;
BEGIN
    -- Call the functions to get department-wise strengths and calculate the total strength
    total_strength := GetDepartmentAStrength() + GetDepartmentBStrength();

    RETURN total_strength;
END TotalStudentStrength;
/

-- Usage example
DECLARE
    total_strength NUMBER;
BEGIN
    total_strength := TotalStudentStrength();
    DBMS_OUTPUT.PUT_LINE('Total student strength: ' || total_strength);
END;
/
OUTPUT:
Total student strength: 250



D] Writing a recursive Functions in PL/SQL Block.
DECLARE
   FUNCTION factorial(n NUMBER) RETURN NUMBER IS
   BEGIN
      IF n = 0 THEN
         RETURN 1;
      ELSE
         RETURN n * factorial(n - 1);
      END IF;
   END factorial;
BEGIN
   DECLARE
      result NUMBER;
   BEGIN
      result := factorial(5);
      DBMS_OUTPUT.PUT_LINE('Factorial of 5 is ' || result);
   END;
END;
/
 
