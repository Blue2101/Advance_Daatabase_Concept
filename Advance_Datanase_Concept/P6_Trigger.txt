(A) Aim: Salary difference

CREATE TABLE Employees (
    employee_id NUMBER PRIMARY KEY,
    salary NUMBER,
    salary_difference NUMBER
);
CREATE OR REPLACE TRIGGER salary_difference_trigger
BEFORE UPDATE ON Employees
FOR EACH ROW
BEGIN
    IF :NEW.salary != :OLD.salary THEN
        :NEW.salary_difference := :NEW.salary - :OLD.salary;
    END IF;
END;
/
-- Insert some sample data
INSERT INTO Employees (employee_id, salary) VALUES (1, 50000);
INSERT INTO Employees (employee_id, salary) VALUES (2, 60000);

-- Update the salary and observe the trigger's effect
UPDATE Employees SET salary = 55000 WHERE employee_id = 1;
SELECT employee_id, salary, salary_difference FROM Employees;

(B) Aim: Trigger Uses Conditional Predicates to Detect Triggering Statement

CREATE TABLE Employees (
    employee_id NUMBER PRIMARY KEY,
    salary NUMBER,
    salary_difference NUMBER
);

CREATE TABLE Salary_Log (
    log_id NUMBER PRIMARY KEY,
    employee_id NUMBER,
    old_salary NUMBER,
    new_salary NUMBER,
    change_date DATE
);

CREATE OR REPLACE TRIGGER salary_increase_trigger
BEFORE UPDATE OF salary ON Employees
FOR EACH ROW
WHEN (NEW.salary > OLD.salary)
BEGIN
    -- Logging the salary increase
    INSERT INTO Salary_Log (employee_id, old_salary, new_salary, change_date)
    VALUES (:OLD.employee_id, :OLD.salary, :NEW.salary, SYSDATE);
END;
/

CREATE SEQUENCE Salary_Log_Seq
    START WITH 1
    INCREMENT BY 1
    NOMAXVALUE;

-- Create the trigger with the updated code
CREATE OR REPLACE TRIGGER salary_increase_trigger
BEFORE UPDATE OF salary ON Employees
FOR EACH ROW
WHEN (NEW.salary > OLD.salary)
BEGIN
    -- Logging the salary increase with a unique log ID
    INSERT INTO Salary_Log (log_id, employee_id, old_salary, new_salary, change_date)
    VALUES (Salary_Log_Seq.NEXTVAL, :OLD.employee_id, :OLD.salary, :NEW.salary, SYSDATE);
END;
/

-- Insert some sample data into the Employees table.
INSERT INTO Employees (employee_id, salary) VALUES (1, 50000);
INSERT INTO Employees (employee_id, salary) VALUES (2, 60000);
SELECT * FROM Salary_Log;


Practical=6 10-14
Aim:- Trigger Logs Changes to EMPLOYEES.SALARY

DROP TABLE Emp_log;
CREATE TABLE Emp_log (
  Emp_id     NUMBER,
  Log_date   DATE,
  New_salary NUMBER,
  Action     VARCHAR2(20));
 
CREATE OR REPLACE TRIGGER log_salary_increase
  AFTER UPDATE OF salary ON employees
  FOR EACH ROW
BEGIN
  INSERT INTO Emp_log (Emp_id, Log_date, New_salary, Action)
  VALUES (:NEW.employee_id, SYSDATE, :NEW.salary, 'New Salary');
END;
/

UPDATE employees
SET salary = salary + 1000.0
WHERE Department_id = 20;
 Output:-
2 rows updated.
 
SELECT * FROM Emp_log;
 
Output:-
    EMP_ID LOG_DATE  NEW_SALARY ACTION
---------- --------- ---------- --------------------
       201 28-APR-10      13650 New Salary
       202 28-APR-10       6300 New Salary
 
2 rows selected.



Practical=6 (10-15)
Aim: Salary difference

CREATE OR REPLACE TRIGGER print_salary_changes
  BEFORE DELETE OR INSERT OR UPDATE ON employees
  FOR EACH ROW
  WHEN (NEW.job_id <> 'AD_PRES')  -- do not print information about President
DECLARE
  sal_diff  NUMBER;
BEGIN
  sal_diff  := :NEW.salary  - :OLD.salary;
  DBMS_OUTPUT.PUT(:NEW.last_name || ': ');
  DBMS_OUTPUT.PUT('Old salary = ' || :OLD.salary || ', ');
  DBMS_OUTPUT.PUT('New salary = ' || :NEW.salary || ', ');
  DBMS_OUTPUT.PUT_LINE('Difference: ' || sal_diff);
END;
/

Query:
SELECT last_name, department_id, salary, job_id
FROM employees
WHERE department_id IN (10, 20, 90)
ORDER BY department_id, last_name;
 Output:-
LAST_NAME                 DEPARTMENT_ID     SALARY JOB_ID
------------------------- ------------- ---------- ----------
Whalen                               10       4200 AD_ASST
Fay                                  20       6000 MK_REP
Hartstein                            20      13000 MK_MAN
De Haan                              90      17000 AD_VP
King                                 90      24000 AD_PRES
Kochhar                              90      17000 AD_VP
 
6 rows selected.

Triggering Statement:-

UPDATE employees
SET salary = salary * 1.05
WHERE department_id IN (10, 20, 90);

Output:-
Whalen: Old salary = 4200, New salary = 4410, Difference: 210
Hartstein: Old salary = 13000, New salary = 13650, Difference: 650
Fay: Old salary = 6000, New salary = 6300, Difference: 300
Kochhar: Old salary = 17000, New salary = 17850, Difference: 850
De Haan: Old salary = 17000, New salary = 17850, Difference: 850
 
6 rows updated.

Query:-
SELECT salary FROM employees WHERE job_id = 'AD_PRES';

Output:-

    SALARY
----------
     25200
 
1 row selected.
