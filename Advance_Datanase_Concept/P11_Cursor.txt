DECLARE
  -- Declare a cursor
  CURSOR my_cursor IS
    SELECT * FROM your_table;

  -- Variables to store cursor attributes
  cursor_open BOOLEAN := FALSE;
  cursor_found BOOLEAN := FALSE;
  cursor_notfound BOOLEAN := FALSE;
  cursor_rowcount NUMBER := 0;

BEGIN
  -- Open the cursor
  OPEN my_cursor;
  cursor_open := TRUE;

  -- Fetch a row from the cursor
  FETCH my_cursor INTO some_variable;

  -- Check cursor attributes
  IF my_cursor%ISOPEN THEN
    cursor_open := TRUE;
    DBMS_OUTPUT.PUT_LINE('Cursor is open.');
  ELSE
    DBMS_OUTPUT.PUT_LINE('Cursor is not open.');
  END IF;

  IF my_cursor%FOUND THEN
    cursor_found := TRUE;
    DBMS_OUTPUT.PUT_LINE('Cursor has found a row.');
  ELSE
    cursor_notfound := TRUE;
    DBMS_OUTPUT.PUT_LINE('Cursor has not found a row.');
  END IF;

  IF my_cursor%NOTFOUND THEN
    cursor_notfound := TRUE;
    DBMS_OUTPUT.PUT_LINE('Cursor has not found a row.');
  ELSE
    cursor_found := TRUE;
    DBMS_OUTPUT.PUT_LINE('Cursor has found a row.');
  END IF;

  cursor_rowcount := my_cursor%ROWCOUNT;
  DBMS_OUTPUT.PUT_LINE('Cursor row count: ' || cursor_rowcount);

  -- Close the cursor
  CLOSE my_cursor;

  -- Check cursor attributes after closing
  IF my_cursor%ISOPEN THEN
    DBMS_OUTPUT.PUT_LINE('Cursor is still open.');
  ELSE
    DBMS_OUTPUT.PUT_LINE('Cursor is closed.');
  END IF;

EXCEPTION
  WHEN OTHERS THEN
    IF my_cursor%ISOPEN THEN
      CLOSE my_cursor; -- Close the cursor in case of an exception
    END IF;
    RAISE;
END;
